#!/bin/bash

if (( $# < 2 ))
then echo "usage: slegal width modulus [y [ x [ncpus [memsize [height [keep]]]]]]"; exit
fi

width=$1
modidx=$2
if (( $# >= 3 )); then      y=$3; else y=0; fi
if (( $# >= 4 )); then      x=$4; else x=0; fi
if (( $# >= 5 )); then  ncpus=$5; else ncpus=1; fi
if (( $# >= 6 )); then  msize=$6; else msize=500M; fi
if (( $# >= 7 )); then height=$7; else height=$width; fi
if (( $# >= 8 )); then   keep=$8; else keep=0; fi

obsolete=""
bin="$HOME/golegal"

echo "$bin/start $width $modidx"
wm="$width.$modidx"
if ((x == 0 && y == 0)); then
  echo "mkdir -p $wm/yx.00.00/fromto.0.0"
  mkdir -p "$wm/yx.00.00/fromto.0.0"
  $bin/start $width $modidx &> "$wm/yx.00.00/cpu.0" || exit 1
fi
nextyx=""
while ((y < height)); do
  yx=$nextyx
  nextx=$x
  nexty=$y
  ((nextx += 1))
  if ((nextx == width)); then ((nextx = 0)); ((nexty += 1)); fi
  if (( nextx < 10 )); then shownextx="0$nextx"; else shownextx=$nextx; fi
  if (( nexty < 10 )); then shownexty="0$nexty"; else shownexty=$nexty; fi
  nextyx="$wm/yx.$shownexty.$shownextx"
  echo "mkdir $nextyx"
  mkdir $nextyx

  date > "$nextyx/start"
  for (( cpu=0; cpu < ncpus; cpu++ )); do
    echo "time $bin/legal $width $modidx $y $x $ncpus $cpu $msize &>  $nextyx/cpu.$cpu"
          time $bin/legal $width $modidx $y $x $ncpus $cpu $msize &> "$nextyx/cpu.$cpu" || kill -9 $$ &
  done
  wait
  date > "$nextyx/end"

  if [[ $obsolete != "" ]]; then rm -rf $obsolete/fromto.*; fi
  if (( keep == 0 || x != 0 )); then obsolete=$yx; else obsolete=""; fi
  x=$nextx
  y=$nexty
done
